{
	"name": "pl_Matrix_GroupX",
	"properties": {
		"activities": [
			{
				"name": "CopyData",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete Matrix data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"additionalColumns": [
							{
								"name": "ExecutionConfigurationId",
								"value": {
									"value": "@pipeline().parameters.parExecutionConfigurationId",
									"type": "Expression"
								}
							},
							{
								"name": "TimeStamp",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							},
							{
								"name": "DropName",
								"value": {
									"value": "@pipeline().parameters.parDropName",
									"type": "Expression"
								}
							},
							{
								"name": "ExecutionNumber",
								"value": {
									"value": "@pipeline().parameters.parExecutionNumber",
									"type": "Expression"
								}
							},
							{
								"name": "PlanId",
								"value": {
									"value": "@pipeline().parameters.parPlanId",
									"type": "Expression"
								}
							}
						],
						"sqlReaderQuery": {
							"value": "@concat('select * from ',pipeline().parameters.parProcedure,'(',pipeline().parameters.parExecutionConfigurationId,')')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sqldb_raw",
						"type": "DatasetReference",
						"parameters": {
							"DestinationTableName": "none"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sqldb_raw",
						"type": "DatasetReference",
						"parameters": {
							"DestinationTableName": {
								"value": "@pipeline().parameters.parDestination",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "sp_UpdateLogEvents_OnSuccess",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_UpdateLogEvents]",
					"storedProcedureParameters": {
						"CopyDuration": {
							"value": {
								"value": "@{activity('CopyData').output.copyDuration}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Destination": {
							"value": {
								"value": "@pipeline().parameters.parDestination",
								"type": "Expression"
							},
							"type": "String"
						},
						"DropName": {
							"value": {
								"value": "@pipeline().parameters.parDropName",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionConfigurationId": {
							"value": {
								"value": "@pipeline().parameters.parExecutionConfigurationId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ExecutionNumber": {
							"value": {
								"value": "@pipeline().parameters.parExecutionNumber",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"GroupPlanId": {
							"value": {
								"value": "@pipeline().parameters.parGroupPlanId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"InError": {
							"value": "No",
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().parameters.parPipelineName",
								"type": "Expression"
							},
							"type": "String"
						},
						"PlanId": {
							"value": {
								"value": "@pipeline().parameters.parPlanId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"retryNumber": {
							"value": "1",
							"type": "Int32"
						},
						"RowsCopied": {
							"value": {
								"value": "@{activity('CopyData').output.rowsCopied}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"RowsRead": {
							"value": {
								"value": "@{activity('CopyData').output.rowsRead}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"StartExecutionDate": {
							"value": {
								"value": "@pipeline().parameters.parStartPipelineExecutionDate",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"StartGroupFromExecutionOrder": {
							"value": "0",
							"type": "Int32"
						},
						"StartPipelineFromExecutionOrder": {
							"value": "0",
							"type": "Int32"
						},
						"StopExecutionDate": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_migration",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "sp_SetExecutionFailedStatus_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyData",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_SetExecutionFailedStatus]",
					"storedProcedureParameters": {
						"parFailed": {
							"value": "True",
							"type": "Boolean"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_migration",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "sp_UpdateLogEvents_OnFailed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "sp_SetExecutionFailedStatus_Failed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_UpdateLogEvents]",
					"storedProcedureParameters": {
						"CopyDuration": {
							"value": {
								"value": "@{activity('CopyData').output.copyDuration}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Destination": {
							"value": {
								"value": "@pipeline().parameters.parDestination",
								"type": "Expression"
							},
							"type": "String"
						},
						"DropName": {
							"value": {
								"value": "@pipeline().parameters.parDropName",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionConfigurationId": {
							"value": {
								"value": "@pipeline().parameters.parExecutionConfigurationId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ExecutionNumber": {
							"value": {
								"value": "@pipeline().parameters.parExecutionNumber",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"GroupPlanId": {
							"value": {
								"value": "@pipeline().parameters.parGroupPlanId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"InError": {
							"value": "Yes",
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().parameters.parPipelineName",
								"type": "Expression"
							},
							"type": "String"
						},
						"PlanId": {
							"value": {
								"value": "@pipeline().parameters.parPlanId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"retryNumber": {
							"value": "1",
							"type": "Int32"
						},
						"RowsCopied": {
							"value": {
								"value": "@{activity('CopyData').output.rowsCopied}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"RowsRead": {
							"value": {
								"value": "@{activity('CopyData').output.rowsRead}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"StartExecutionDate": {
							"value": {
								"value": "@pipeline().parameters.parStartPipelineExecutionDate",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"StartGroupFromExecutionOrder": {
							"value": "0",
							"type": "Int32"
						},
						"StartPipelineFromExecutionOrder": {
							"value": "0",
							"type": "Int32"
						},
						"StopExecutionDate": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_migration",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete Matrix data",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_DeleteMatrixTableName]",
					"storedProcedureParameters": {
						"DropName": {
							"value": {
								"value": "@pipeline().parameters.parDropName",
								"type": "Expression"
							},
							"type": "String"
						},
						"TableName": {
							"value": {
								"value": "@pipeline().parameters.parDestination",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_raw",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "CallEventgridCompeted",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Create json message pipelineParalledCompleted",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://msyspipelineparallelcompleted.westeurope-1.eventgrid.azure.net/api/events",
					"method": "POST",
					"headers": {
						"aeg-sas-key": "yPXiW6fv4JUzfw3i2dPiuoDmTz50pdb5krD8FddlySc="
					},
					"body": {
						"value": "@json(variables('msgPipelineParallelCompleted'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Create json message pipelineParalledCompleted",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "sp_UpdateLogEvents_OnSuccess",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "msgPipelineParallelCompleted",
					"value": {
						"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineParallelCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"PipelineName\":\"',pipeline().parameters.parPipelineName,'\",\"Procedure\":\"',pipeline().parameters.parProcedure,'\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"parProcedure": {
				"type": "string"
			},
			"parDestination": {
				"type": "string"
			},
			"parExecutionOrder": {
				"type": "string"
			},
			"parGroupName": {
				"type": "string"
			},
			"parDropName": {
				"type": "string"
			},
			"parExecutionConfigurationId": {
				"type": "string"
			},
			"parExecutionNumber": {
				"type": "string"
			},
			"parGroupPlanId": {
				"type": "string"
			},
			"parPipelineName": {
				"type": "string"
			},
			"parStartPipelineExecutionDate": {
				"type": "string"
			},
			"parPlanId": {
				"type": "string"
			}
		},
		"variables": {
			"varDropName": {
				"type": "String"
			},
			"msgPipelineParallelCompleted": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Parallel"
		},
		"annotations": [],
		"lastPublishTime": "2022-12-21T11:16:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}