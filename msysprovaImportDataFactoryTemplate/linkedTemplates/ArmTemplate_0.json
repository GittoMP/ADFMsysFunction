{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "msysprovaImportDataFactoryTemplate"
		},
		"ls_migration_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_migration'"
		},
		"ls_my_italy_new_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_my_italy_new'"
		},
		"ls_raw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_raw'"
		},
		"triggerParallelStop_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/60aba99d-ea2b-4783-98b2-8a8c89524f0e/resourceGroups/manpowerdev/providers/Microsoft.EventGrid/topics/msyspipelineInvokePoc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_migration')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_migration_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_my_italy_new')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_my_italy_new_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_raw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_raw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineStartParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call Start",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineParallelStarted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelineparallelstarted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "Cn9JDvMTyfWFqpHZVOWZIa9nbl9VJ//m8KW8z/zAWUA="
							},
							"body": {
								"value": "@json(variables('msgPipelineParallelStarted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineParallelStarted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SP Execution Parallel Live Plan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineParallelStarted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineParallelStarted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupA_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": 0},\"dataVersion\":\"1.0\"}]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "sp_StartDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_StartDateParallel]"
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Execution Parallel Live Plan",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_StartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_PopulateLiveParallelExecutionPlan]"
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"varStartFromId": {
						"type": "String"
					},
					"varRetryNumber": {
						"type": "String"
					},
					"ParallelStop": {
						"type": "String"
					},
					"msgPipelineParallelStarted": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Parallel"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T10:24:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineStop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_StopEndDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_EndDate]"
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T10:24:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineStopParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_StopEndDateParallel",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_EndDateParallel]"
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Parallel"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T10:24:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_migration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_migration",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DropName",
						"type": "nvarchar"
					},
					{
						"name": "ExecutionConfigurationId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExecutionNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GroupName",
						"type": "nvarchar"
					},
					{
						"name": "GroupPlanId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PlanId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PipelineName",
						"type": "nvarchar"
					},
					{
						"name": "Procedure",
						"type": "nvarchar"
					},
					{
						"name": "Destination",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "ExecutionOrder",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsMatrix",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LiveExecutionPlan"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_my_italy_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_my_italy_new",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_my_italy_new')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DestinationTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().DestinationTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineStart')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetLastRetryNumber",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT eh.RetryNumber as Retry \nFROM [dbo].[ExecutionConfiguration] ec\nINNER JOIN [dbo].[ExecutionHistory] eh ON ec.id = eh.ExecutionConfigurationId\nWHERE ec.ToBeExecuted = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb_migration",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "If Retry eq 0",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetLastRetryNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetLastRetryNumber').output.firstRow.Retry,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Stored procedure create Execution Live Plan",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "sp_StartDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_PopulateLiveExecutionPlan]"
									},
									"linkedServiceName": {
										"referenceName": "ls_migration",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Call Start",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create json message pipelineCompleted",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
										"method": "POST",
										"headers": {
											"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
										},
										"body": {
											"value": "@json(variables('msgPipelineCompleted'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create json message pipelineCompleted",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stored procedure create Execution Live Plan",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "msgPipelineCompleted",
										"value": {
											"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupA_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": 0},\"dataVersion\":\"1.0\"}]')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "sp_StartDate",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_StartDate]"
									},
									"linkedServiceName": {
										"referenceName": "ls_migration",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varStartFromId": {
						"type": "String"
					},
					"varRetryNumber": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T10:24:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineStartFrom')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call Start",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
							},
							"body": {
								"value": "@json(variables('msgPipelineCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "varStartFromId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted \",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupA_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\":', variables('varStartFromId'),'},\"dataVersion\":\"1.0\"}]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "varStartFromId",
						"description": "Start from the id  plus 1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_StartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Load Execution Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "varStartFromId",
							"value": {
								"value": "@string(activity('Load Execution Parameters').output.firstRow.StartExecutionFrom)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "sp_StartDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_StartDate]"
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load Execution Parameters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_LoadParameters]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb_migration",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varStartFromId": {
						"type": "String"
					},
					"varExecutionConfigurationId": {
						"type": "String"
					},
					"varDropName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:01:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_migration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GroupA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
							},
							"body": {
								"value": "@json(variables('msgPipelineCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupA_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_DeleteDestinationTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.parProcedure}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_my_italy_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_DeleteDestinationTable",
						"description": "prova",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteTableName]",
							"storedProcedureParameters": {
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varDropName": {
						"type": "String"
					},
					"selectTemp": {
						"type": "String"
					},
					"ErrorTest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T10:57:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_my_italy_new')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GroupB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
							},
							"body": {
								"value": "@json(variables('msgPipelineCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupB_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_DeleteDestinationTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.parProcedure}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_my_italy_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_DeleteDestinationTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteTableName]",
							"storedProcedureParameters": {
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varDropName": {
						"type": "String"
					},
					"ErrorTest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T10:56:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_my_italy_new')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GroupC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
							},
							"body": {
								"value": "@json(variables('msgPipelineCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupB_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_DeleteDestinationTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.parProcedure}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_my_italy_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_DeleteDestinationTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteTableName]",
							"storedProcedureParameters": {
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varDropName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:01:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_my_italy_new')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GroupX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_DeleteDestinationTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.parProcedure}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_my_italy_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedParallelStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineParalledCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelineparallelcompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "yPXiW6fv4JUzfw3i2dPiuoDmTz50pdb5krD8FddlySc="
							},
							"body": {
								"value": "@json(variables('msgPipelineParallelCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineParalledCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineParallelCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineParallelCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"PipelineName\":\"',pipeline().parameters.parPipelineName,'\",\"Procedure\":\"',pipeline().parameters.parProcedure,'\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "sp_DeleteDestinationTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteTableName]",
							"storedProcedureParameters": {
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 15,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineParallelCompleted": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Parallel"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:14:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_my_italy_new')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GroupY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_DeleteDestinationTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.parProcedure}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_my_italy_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedParallelStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_DeleteDestinationTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteTableName]",
							"storedProcedureParameters": {
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelineparallelcompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "yPXiW6fv4JUzfw3i2dPiuoDmTz50pdb5krD8FddlySc="
							},
							"body": {
								"value": "@json(variables('msgPipelineParallelCompleted'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineParallelCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineParallelCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"PipelineName\":\"',pipeline().parameters.parPipelineName,'\",\"Procedure\":\"',pipeline().parameters.parProcedure,'\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineParallelCompleted": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Parallel"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:15:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_my_italy_new')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Matrix_GroupA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
							},
							"body": {
								"value": "@json(variables('msgPipelineCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupB_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Matrix data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from ',pipeline().parameters.parProcedure,'(',pipeline().parameters.parExecutionConfigurationId,')')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": "none"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete Matrix data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteMatrixTableName]",
							"storedProcedureParameters": {
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varDropName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:03:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Matrix_GroupB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelinecompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "1kw7hQpSpaPXlTSWCcpRDDlliiSEpQWD5SWsFXLxzVw="
							},
							"body": {
								"value": "@json(variables('msgPipelineCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"Procedure\":\"vGroupB_1\",\"Destination\":\"Group01\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Matrix data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from ',pipeline().parameters.parProcedure,'(',pipeline().parameters.parExecutionConfigurationId,')')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": "none"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete Matrix data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteMatrixTableName]",
							"storedProcedureParameters": {
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"msgPipelineCompleted": {
						"type": "String"
					},
					"varDropName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sequential"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:03:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Matrix_GroupX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Matrix data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "ExecutionConfigurationId",
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										}
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									{
										"name": "DropName",
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										}
									},
									{
										"name": "ExecutionNumber",
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										}
									},
									{
										"name": "PlanId",
										"value": {
											"value": "@pipeline().parameters.parPlanId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from ',pipeline().parameters.parProcedure,'(',pipeline().parameters.parExecutionConfigurationId,')')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": "none"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_raw",
								"type": "DatasetReference",
								"parameters": {
									"DestinationTableName": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp_UpdateLogEvents_OnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "No",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_SetExecutionFailedStatus_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_SetExecutionFailedStatus]",
							"storedProcedureParameters": {
								"parFailed": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UpdateLogEvents_OnFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_SetExecutionFailedStatus_Failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_UpdateLogEvents]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": {
										"value": "@{activity('CopyData').output.copyDuration}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionConfigurationId": {
									"value": {
										"value": "@pipeline().parameters.parExecutionConfigurationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionNumber": {
									"value": {
										"value": "@pipeline().parameters.parExecutionNumber",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"GroupPlanId": {
									"value": {
										"value": "@pipeline().parameters.parGroupPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"InError": {
									"value": "Yes",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.parPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PlanId": {
									"value": {
										"value": "@pipeline().parameters.parPlanId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"retryNumber": {
									"value": "1",
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@{activity('CopyData').output.rowsCopied}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@{activity('CopyData').output.rowsRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartExecutionDate": {
									"value": {
										"value": "@pipeline().parameters.parStartPipelineExecutionDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StartGroupFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StartPipelineFromExecutionOrder": {
									"value": "0",
									"type": "Int32"
								},
								"StopExecutionDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_migration",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete Matrix data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DeleteMatrixTableName]",
							"storedProcedureParameters": {
								"DropName": {
									"value": {
										"value": "@pipeline().parameters.parDropName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.parDestination",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_raw",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CallEventgridCompeted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create json message pipelineParalledCompleted",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://msyspipelineparallelcompleted.westeurope-1.eventgrid.azure.net/api/events",
							"method": "POST",
							"headers": {
								"aeg-sas-key": "yPXiW6fv4JUzfw3i2dPiuoDmTz50pdb5krD8FddlySc="
							},
							"body": {
								"value": "@json(variables('msgPipelineParallelCompleted'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create json message pipelineParalledCompleted",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sp_UpdateLogEvents_OnSuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "msgPipelineParallelCompleted",
							"value": {
								"value": "@concat('[{\"id\":\"',string(rand(1,5000000)),'\",\"eventType\":\"msyspipelineParallelCompleted\",\"subject\":\"pipeline\",\"eventTime\":\"2021-08-10T21:03:07+00:00\",\"data\":{\"PipelineName\":\"',pipeline().parameters.parPipelineName,'\",\"Procedure\":\"',pipeline().parameters.parProcedure,'\",\"ExecutionOrderNumber\": ',pipeline().parameters.parExecutionOrder,'},\"dataVersion\":\"1.0\"}]')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"parProcedure": {
						"type": "string"
					},
					"parDestination": {
						"type": "string"
					},
					"parExecutionOrder": {
						"type": "string"
					},
					"parGroupName": {
						"type": "string"
					},
					"parDropName": {
						"type": "string"
					},
					"parExecutionConfigurationId": {
						"type": "string"
					},
					"parExecutionNumber": {
						"type": "string"
					},
					"parGroupPlanId": {
						"type": "string"
					},
					"parPipelineName": {
						"type": "string"
					},
					"parStartPipelineExecutionDate": {
						"type": "string"
					},
					"parPlanId": {
						"type": "string"
					}
				},
				"variables": {
					"varDropName": {
						"type": "String"
					},
					"msgPipelineParallelCompleted": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Parallel"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:16:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_migration')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerParallelStop')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipelineStopParallel",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "CustomEventsTrigger",
				"typeProperties": {
					"subjectEndsWith": "",
					"subjectBeginsWith": "ParallelStop",
					"scope": "[parameters('triggerParallelStop_properties_typeProperties_scope')]",
					"events": [
						"pipelineInvoke"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipelineStopParallel')]"
			]
		}
	]
}